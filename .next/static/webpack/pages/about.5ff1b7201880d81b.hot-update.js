"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/about",{

/***/ "./lib/api.ts":
/*!********************!*\
  !*** ./lib/api.ts ***!
  \********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchAboutPage: function() { return /* binding */ fetchAboutPage; },\n/* harmony export */   getAllPostsForHome: function() { return /* binding */ getAllPostsForHome; },\n/* harmony export */   getAllPostsWithSlug: function() { return /* binding */ getAllPostsWithSlug; },\n/* harmony export */   getPostAndMorePosts: function() { return /* binding */ getPostAndMorePosts; },\n/* harmony export */   getPreviewPost: function() { return /* binding */ getPreviewPost; }\n/* harmony export */ });\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\nconst API_URL = process.env.WORDPRESS_API_URL;\nasync function fetchAPI() {\n    let query = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"\", { variables } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    const headers = {\n        \"Content-Type\": \"application/json\"\n    };\n    if (process.env.WORDPRESS_AUTH_REFRESH_TOKEN) {\n        headers[\"Authorization\"] = \"Bearer \".concat(process.env.WORDPRESS_AUTH_REFRESH_TOKEN);\n    }\n    // WPGraphQL Plugin must be enabled\n    const res = await fetch(API_URL, {\n        headers,\n        method: \"POST\",\n        body: JSON.stringify({\n            query,\n            variables\n        })\n    });\n    const json = await res.json();\n    if (json.errors) {\n        console.error(json.errors);\n        throw new Error(\"Failed to fetch API\");\n    }\n    return json.data;\n}\nasync function fetchAboutPage() {\n    var _data_pageBy;\n    const data = await fetchAPI('\\n    query AboutPage {\\n      pageBy(uri: \"/about/\") {\\n        content\\n      }\\n    }\\n    ');\n    console.log(data);\n    return data === null || data === void 0 ? void 0 : (_data_pageBy = data.pageBy) === null || _data_pageBy === void 0 ? void 0 : _data_pageBy.content;\n}\nasync function getPreviewPost(id) {\n    let idType = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"DATABASE_ID\";\n    const data = await fetchAPI(\"\\n    query PreviewPost($id: ID!, $idType: PostIdType!) {\\n      post(id: $id, idType: $idType) {\\n        databaseId\\n        slug\\n        status\\n      }\\n    }\", {\n        variables: {\n            id,\n            idType\n        }\n    });\n    return data.post;\n}\nasync function getAllPostsWithSlug() {\n    const data = await fetchAPI(\"\\n    {\\n      posts(first: 10000) {\\n        edges {\\n          node {\\n            slug\\n          }\\n        }\\n      }\\n    }\\n  \");\n    return data === null || data === void 0 ? void 0 : data.posts;\n}\nasync function getAllPostsForHome(preview) {\n    const data = await fetchAPI(\"\\n    query AllPosts {\\n      posts(first: 20, where: { orderby: { field: DATE, order: DESC } }) {\\n        edges {\\n          node {\\n            title\\n            excerpt\\n            slug\\n            date\\n            featuredImage {\\n              node {\\n                sourceUrl\\n              }\\n            }\\n            author {\\n              node {\\n                name\\n                firstName\\n                lastName\\n                avatar {\\n                  url\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  \", {\n        variables: {\n            onlyEnabled: !preview,\n            preview\n        }\n    });\n    return data === null || data === void 0 ? void 0 : data.posts;\n}\nasync function getPostAndMorePosts(slug, preview, previewData) {\n    const postPreview = preview && (previewData === null || previewData === void 0 ? void 0 : previewData.post);\n    // The slug may be the id of an unpublished post\n    const isId = Number.isInteger(Number(slug));\n    const isSamePost = isId ? Number(slug) === postPreview.id : slug === postPreview.slug;\n    const isDraft = isSamePost && (postPreview === null || postPreview === void 0 ? void 0 : postPreview.status) === \"draft\";\n    const isRevision = isSamePost && (postPreview === null || postPreview === void 0 ? void 0 : postPreview.status) === \"publish\";\n    const data = await fetchAPI(\"\\n    fragment AuthorFields on User {\\n      name\\n      firstName\\n      lastName\\n      avatar {\\n        url\\n      }\\n    }\\n    fragment PostFields on Post {\\n      title\\n      excerpt\\n      slug\\n      date\\n      featuredImage {\\n        node {\\n          sourceUrl\\n        }\\n      }\\n      author {\\n        node {\\n          ...AuthorFields\\n        }\\n      }\\n      categories {\\n        edges {\\n          node {\\n            name\\n          }\\n        }\\n      }\\n      tags {\\n        edges {\\n          node {\\n            name\\n          }\\n        }\\n      }\\n    }\\n    query PostBySlug($id: ID!, $idType: PostIdType!) {\\n      post(id: $id, idType: $idType) {\\n        ...PostFields\\n        content\\n        \".concat(// Only some of the fields of a revision are considered as there are some inconsistencies\n    isRevision ? \"\\n        revisions(first: 1, where: { orderby: { field: MODIFIED, order: DESC } }) {\\n          edges {\\n            node {\\n              title\\n              excerpt\\n              content\\n              author {\\n                node {\\n                  ...AuthorFields\\n                }\\n              }\\n            }\\n          }\\n        }\\n        \" : \"\", \"\\n      }\\n      posts(first: 3, where: { orderby: { field: DATE, order: DESC } }) {\\n        edges {\\n          node {\\n            ...PostFields\\n          }\\n        }\\n      }\\n    }\\n  \"), {\n        variables: {\n            id: isDraft ? postPreview.id : slug,\n            idType: isDraft ? \"DATABASE_ID\" : \"SLUG\"\n        }\n    });\n    // Draft posts may not have an slug\n    if (isDraft) data.post.slug = postPreview.id;\n    // Apply a revision (changes in a published post)\n    if (isRevision && data.post.revisions) {\n        var _data_post_revisions_edges_;\n        const revision = (_data_post_revisions_edges_ = data.post.revisions.edges[0]) === null || _data_post_revisions_edges_ === void 0 ? void 0 : _data_post_revisions_edges_.node;\n        if (revision) Object.assign(data.post, revision);\n        delete data.post.revisions;\n    }\n    // Filter out the main post\n    data.posts.edges = data.posts.edges.filter((param)=>{\n        let { node } = param;\n        return node.slug !== slug;\n    });\n    // If there are still 3 posts, remove the last one\n    if (data.posts.edges.length > 2) data.posts.edges.pop();\n    return data;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/api.ts\n"));

/***/ })

});